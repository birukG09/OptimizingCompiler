OptimizingCompiler - x86 to x86_64 Assembly Compiler

OptimizingCompiler
OptimizingCompiler is a web-based compiler that translates x86 (32-bit) assembly code into optimized x86_64 (64-bit) machine code. Built with a Flask backend and a frontend using HTML, CSS, and JavaScript, this project is designed for experimentation, benchmarking, and educational use in low-level compiler design.

It supports multiple optimization levels and includes benchmark modules to measure performance, size, and transformation accuracy.

🚀 Features
🔁 Architecture Translation: x86 (32-bit) → x86_64 (64-bit)
🧠 Multiple Optimization Levels:
🔹 No Optimization
🔸 Basic Optimization
⚙️ Standard Optimization
🔥 Aggressive Optimization
📊 Benchmark System: Four benchmark stages to measure:
Code size
Compile time
Runtime performance
Optimization effectiveness
🌐 Web Interface:
Built with HTML, CSS, JavaScript
Input form for raw assembly code
Real-time response with compiled output
🐍 Python Flask Backend:
Routes compilation requests
Manages benchmarks and optimization engines
🛠️ Modular Codebase:
Easy to extend for additional architectures
Pluggable optimization passes
🧪 Optimization Levels Explained
Level	Description
❌ No Opt	Raw translation without any transformation. Good for debugging.
🧩 Basic Opt	Removes redundant instructions and applies basic refactoring.
🛠️ Standard Opt	Intermediate-level optimizations like constant folding, register reuse.
🔥 Aggressive	High-level transformations, loop unrolling, instruction reordering, etc.
🧱 Technology Stack
Layer	Tech Used
Backend	Python, Flask
Frontend	HTML, CSS, JavaScript
Compiler	Custom x86 → x86_64 engine with optimization passes
Benchmarks	Python-based testing + reporting framework.use html css javascript and use python flask fram work and  assembly  and Custom x86 → x86_64 engine with optimization passes just do what you are told.add home page withe  withe good animation and make the  app blacke  dark vs code theamed app add my name Biruk Gebre and my git hub birukG09 on contact info and add about  on home page and and add this on about page optimizing compiler upgrades 32-bit x86 code to efficient 64-bit (x86-64) code. Tested across four benchmarks, it delivers: